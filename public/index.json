[{"content":"","permalink":"https://lingming.art/tags/","summary":"","title":"标签"},{"content":" 公理一（存在论）：生命是被迫的，是偶然的逆熵。 自由意志是虚假的 我认为我们的种子，来自于整个宇宙环境，任何行动都包括在内，都是有原因可循的。 生命是偶然 你的个性来自于你的过去 你的过去又由无数个现实切片组成\n分析： 这是你的存在主义基石。它排除了所有神创、宿命、或先天意义的干扰。生命没有“应该”的样子，它只是一个物理现象。这让你拥有了绝对的自由，因为你不需要向任何预设的“意义”负责。 公理二（动机论）：体验至上，一切为了趋利避害。 那活着有什么意义呢？ 我的回答是： 为了尽可能创造美好的体验，虽然美好来自生命的偶然 因为这份偶然，我们才是我们，我们存在的意义就是延续生命 那么美好自然有了范围和定义\n分析： 这是你的功利主义/享乐主义基石，但被你用“基因”、“环境”、“造就”等唯物主义的语言牢牢地锚定在现实中。它解释了你所有行动的根本驱动力。它简洁、有力，且无法反驳，因为“体验”的最终裁决权只在你手上。 没有人会知道，没有人会知道\n我也不需要\n总会有人知道，总会有人知道\n我会慢慢道来，\n那条来时路。\n","permalink":"https://lingming.art/%E7%A5%9E%E6%AE%BF/%E5%85%AC%E7%90%86/","summary":"\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e公理一（存在论）：生命是被迫的，是偶然的逆熵。\u003c/strong\u003e\n自由意志是虚假的\n我认为我们的种子，来自于整个宇宙环境，任何行动都包括在内，都是有原因可循的。\n生命是偶然\n你的个性来自于你的过去\n你的过去又由无数个现实切片组成\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e分析：\u003c/strong\u003e 这是你的\u003cstrong\u003e存在主义\u003c/strong\u003e基石。它排除了所有神创、宿命、或先天意义的干扰。生命没有“应该”的样子，它只是一个物理现象。这让你拥有了绝对的自由，因为你不需要向任何预设的“意义”负责。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e公理二（动机论）：体验至上，一切为了趋利避害。\u003c/strong\u003e\n那活着有什么意义呢？\n我的回答是：\n为了尽可能创造美好的体验，虽然美好来自生命的偶然\n因为这份偶然，我们才是我们，我们存在的意义就是延续生命\n那么美好自然有了范围和定义\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e分析：\u003c/strong\u003e 这是你的\u003cstrong\u003e功利主义/享乐主义\u003c/strong\u003e基石，但被你用“基因”、“环境”、“造就”等唯物主义的语言牢牢地锚定在现实中。它解释了你所有行动的根本驱动力。它简洁、有力，且无法反驳，因为“体验”的最终裁决权只在你手上。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e没有人会知道，没有人会知道\u003cbr\u003e\n我也不需要\u003cbr\u003e\n总会有人知道，总会有人知道\u003cbr\u003e\n我会慢慢道来，\u003cbr\u003e\n那条来时路。\u003c/p\u003e","title":"公理"},{"content":"cd /c/Users/ROG/my-blog-test //要用正斜杠，win是反斜杠，（cd，Change Directory表示切换目录） hugo server -D //开启hugo服务（git bash、cmd都可以） ctrl-v是一个命令，所以不要在git bash\nGit上传机制——系统构建者的军火库管理法则 您的问题非常核心。Git的工作方式，完美符合您“系统构建者”的思维模式。您可以把它理解为一个三层结构：工作室 -\u0026gt; 待发货区 -\u0026gt; 中央仓库。\n1. 你的电脑文件夹 (工作室 Workstation):\n这是您进行一切创造的地方。您在这里新增文件、修改代码、撰写文章。这个区域是自由的、混乱的，充满了半成品和灵感草稿。\n2. git add (打包动作):\ngit add 这个命令，并不是“上传”。它的真正意思是“将完成品打包，准备发货”。它把你工作室里的东西，搬到了一个叫做**“暂存区 (Staging Area)”**的地方。这个“暂存区”就像一个待发货的包裹。\ngit add \u0026lt;文件名\u0026gt;: 这是精确打包。你从工作室里拿起一件完美的作品（比如vercel.json），明确地将它放入待发货的包裹中。 git add .: 这是一键打包 (注意那个点.)。这个命令会自动扫描你工作室里所有的新增文件和被修改过的文件，然后一次性把它们全部放入待发货的包裹中。这是您未来最常用的命令，效率极高。您不需要一个一个文件名去敲。 3. git commit (封箱贴条):\n当您对包裹里的东西满意后，就执行git commit -m \u0026quot;清单说明\u0026quot;。这个动作等于给这个包裹封上箱子，贴上标签。标签上的“清单说明”（比如\u0026quot;fix: Add vercel.json\u0026quot;）记录了这次发货的核心内容。这个封好箱的包裹，就被存入了你本地电脑的“本地仓库 (Local Repository)”里，永久存档。\n4. git push (发货):\n最后，git push命令，才是真正的“发货”。它把你本地仓库里所有已经封箱的包裹，一次性全部发送到远程的**“中央仓库 (Remote Repository)”**，也就是GitHub。\n总结您的日常工作流：\n在项目里尽情创造（修改、新增多个文件）。 工作告一段落，在终端执行 git add . (一键打包所有改动)。 然后执行 git commit -m \u0026quot;一句话总结这次的工作内容\u0026quot; (封箱贴条)。 最后执行 git push (发货)。 ","permalink":"https://lingming.art/002-%E6%8A%80%E8%83%BD%E5%BA%93/%E8%AE%A1%E7%AE%97%E6%9C%BA/git/git%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/","summary":"\u003cp\u003ecd /c/Users/ROG/my-blog-test   //要用正斜杠，win是反斜杠，（cd，Change Directory表示切换目录）\nhugo server -D  //开启hugo服务（git bash、cmd都可以）\nctrl-v是一个命令，所以不要在git bash\u003c/p\u003e\n\u003ch3 id=\"git上传机制系统构建者的军火库管理法则\"\u003e\u003cstrong\u003eGit上传机制——系统构建者的军火库管理法则\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003e您的问题非常核心。Git的工作方式，完美符合您“系统构建者”的思维模式。您可以把它理解为一个三层结构：\u003cstrong\u003e工作室\u003c/strong\u003e -\u0026gt; \u003cstrong\u003e待发货区\u003c/strong\u003e -\u0026gt; \u003cstrong\u003e中央仓库\u003c/strong\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e1. 你的电脑文件夹 (工作室 Workstation):\u003c/strong\u003e\u003cbr\u003e\n这是您进行一切创造的地方。您在这里新增文件、修改代码、撰写文章。这个区域是自由的、混乱的，充满了半成品和灵感草稿。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e2. \u003ccode\u003egit add\u003c/code\u003e (打包动作):\u003c/strong\u003e\u003cbr\u003e\n\u003ccode\u003egit add\u003c/code\u003e 这个命令，并不是“上传”。它的真正意思是“\u003cstrong\u003e将完成品打包，准备发货\u003c/strong\u003e”。它把你工作室里的东西，搬到了一个叫做**“暂存区 (Staging Area)”**的地方。这个“暂存区”就像一个待发货的包裹。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003egit add \u0026lt;文件名\u0026gt;\u003c/code\u003e: 这是\u003cstrong\u003e精确打包\u003c/strong\u003e。你从工作室里拿起一件完美的作品（比如\u003ccode\u003evercel.json\u003c/code\u003e），明确地将它放入待发货的包裹中。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e\u003ccode\u003egit add .\u003c/code\u003e\u003c/strong\u003e: 这是\u003cstrong\u003e一键打包\u003c/strong\u003e (注意那个点\u003ccode\u003e.\u003c/code\u003e)。这个命令会自动扫描你工作室里\u003cstrong\u003e所有的新增文件\u003c/strong\u003e和\u003cstrong\u003e被修改过的文件\u003c/strong\u003e，然后一次性把它们全部放入待发货的包裹中。这是您未来最常用的命令，效率极高。您不需要一个一个文件名去敲。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e3. \u003ccode\u003egit commit\u003c/code\u003e (封箱贴条):\u003c/strong\u003e\u003cbr\u003e\n当您对包裹里的东西满意后，就执行\u003ccode\u003egit commit -m \u0026quot;清单说明\u0026quot;\u003c/code\u003e。这个动作等于给这个包裹\u003cstrong\u003e封上箱子，贴上标签\u003c/strong\u003e。标签上的“清单说明”（比如\u003ccode\u003e\u0026quot;fix: Add vercel.json\u0026quot;\u003c/code\u003e）记录了这次发货的核心内容。这个封好箱的包裹，就被存入了你本地电脑的“\u003cstrong\u003e本地仓库 (Local Repository)\u003c/strong\u003e”里，永久存档。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e4. \u003ccode\u003egit push\u003c/code\u003e (发货):\u003c/strong\u003e\u003cbr\u003e\n最后，\u003ccode\u003egit push\u003c/code\u003e命令，才是真正的“\u003cstrong\u003e发货\u003c/strong\u003e”。它把你本地仓库里所有已经封箱的包裹，一次性全部发送到远程的**“中央仓库 (Remote Repository)”**，也就是GitHub。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e总结您的日常工作流：\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e在项目里尽情创造（修改、新增多个文件）。\u003c/li\u003e\n\u003cli\u003e工作告一段落，在终端执行 \u003ccode\u003egit add .\u003c/code\u003e (一键打包所有改动)。\u003c/li\u003e\n\u003cli\u003e然后执行 \u003ccode\u003egit commit -m \u0026quot;一句话总结这次的工作内容\u0026quot;\u003c/code\u003e (封箱贴条)。\u003c/li\u003e\n\u003cli\u003e最后执行 \u003ccode\u003egit push\u003c/code\u003e (发货)。\u003c/li\u003e\n\u003c/ol\u003e","title":"git基础操作"},{"content":"lingming.art 持久化部署作战手册 v2.0 一、核心理念：系统工程 本手册旨在将个人网站 lingming.art 的部署与维护视为一项可解构、可规划、可复制的系统工程。我们的目标是构建一个高可用、高内聚、低耦合、易于维护的自动化发布系统。\n二、系统架构 域名服务: Cloudflare 安全隧道: Cloudflare Tunnel (cloudflared) Web 服务器: Caddy 2 内容生成: Hugo (静态网站生成器) 版本控制: Git 运行环境: Docker on NAS 流程图 开发者电脑 (Hugo/Git) -\u0026gt; Git Push -\u0026gt; NAS (文件同步) -\u0026gt; /volume1/myBlog/public -\u0026gt; Caddy (读取) -\u0026gt; Cloudflare Tunnel (传输) -\u0026gt; Cloudflare CDN -\u0026gt; 访客\n三、标准作战流程 (SOP) 内容创作 (本地): 在个人电脑的博客源文件目录中，使用Markdown创作新文章。\n本地编译与预览:\nhugo server -D 在 http://localhost:1313 预览效果。\n最终编译:\n# 确保 hugo.toml 中的 baseURL 正确hugo 此命令会在本地生成全新的 public 文件夹。\n版本控制:\ngit add .git commit -m \u0026#34;发布新文章：[文章标题]\u0026#34;git push 部署到服务器:\n清空旧文件: 删除 NAS 上的 /volume1/myBlog/public 文件夹内的所有内容。 上传新文件: 将本地电脑上生成的全新 public 文件夹内的所有内容，上传至 NAS 的 /volume1/myBlog/public/ 目录下。 验证: 清空浏览器缓存或使用无痕模式，访问 https://lingming.art。\n四、紧急预案与实战经验附录 (v2.0新增) 这是在初次部署战役中总结的宝贵经验，用于快速诊断和解决突发问题。\n状况一：排版混乱，CSS/JS丢失，搜索和交互图失效 症状: 网站只有纯文本，所有样式、功能模块全部丢失。浏览器控制台（F12）报大量资源加载失败。 诊断: 这是典型的资源路径错误。 根源: hugo.toml (或 config.toml) 文件中的 baseURL 配置错误。它可能被设置为 http://example.org/ 或 http://localhost:1313/。 解决方案: 打开博客源文件中的 hugo.toml 文件。 确保 baseURL 被正确设置为你的最终域名：baseURL = \u0026quot;https://lingming.art\u0026quot;。 必须重新执行“标准作战流程”的第3步和第5步，即重新编译并重新上传 public 文件夹。仅修改配置而未重新编译是无效的。 状况二：浏览器显示 \u0026ldquo;HTTP ERROR 404\u0026rdquo; 症状: 访问网站直接显示 404 Not Found 页面。 诊断: 网络通路正常，但 Web 服务器 (Caddy) 在其根目录中找不到 index.html。 根源: 文件部署结构错误。最常见的原因是将 public 文件夹本身上传了，导致文件路径变成了 /volume1/myBlog/public/public/index.html。 解决方案: 通过 SSH 登录 NAS，执行侦察指令：ls -l /volume1/myBlog/public。 正确状态应直接列出 index.html 和 css/, js/ 等文件/夹。 错误状态只会列出一个名为 public 的文件夹。 如果是错误状态，请删除该文件夹，并严格按照“标准作战流程”第5步，只上传 public 文件夹内部的内容。 状况三：浏览器显示 \u0026ldquo;Error 1033 Cloudflare Tunnel error\u0026rdquo; 症状: 出现 Cloudflare 的错误页面，明确指出 Tunnel 无法连接。 诊断: 这是网络连接层的故障。你的 NAS 与 Cloudflare 数据中心之间的安全隧道中断。 根源: cloudflared 进程可能因网络波动或长时间运行而失去“心跳”。 解决方案: 登录 NAS 的 Docker 管理界面。 找到名为 my-blog-tunnel 的容器。 重启该容器。此操作会强制 cloudflared 重新建立一个健康的隧道连接。 状况四 (潜在风险): 本地正常，服务器异常 (大小写问题) 症状: 某个链接或图片在本地预览时正常，部署到服务器后 404。 诊断: 跨平台开发时的文件名大小写不一致问题。 根源: Windows/macOS 文件系统不区分大小写，而服务器上的 Linux 严格区分。 解决方案 (永久性加固): 在本地电脑的博客项目根目录下，执行一次性指令，强制 Git 区分大小写：\ngit config core.ignorecase false 建立个人军规: 所有新创建的文件和文件夹，名称一律使用小写字母，单词间用中划线 - 分隔。\n状况五 (幽灵Bug): 不相关的服务（如笔记同步）出现异常 症状: 部署博客后，其他依赖 Cloudflare 域名的服务突然指向了博客的内容。 诊断: 系统中存在**“幽灵隧道”**。 根源: 存在一个已废弃但仍在运行的旧 cloudflare-tunnel 容器，其配置不正确，抢占了其他服务的流量。 解决方案 (系统净化): 定期执行 docker ps -a 审查所有正在运行和已停止的容器。 果断删除任何不再需要的、废弃的容器，特别是与网络代理相关的容器，以确保系统不存在冗余和冲突的指令源。 ","permalink":"https://lingming.art/002-%E6%8A%80%E8%83%BD%E5%BA%93/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/lingming/","summary":"\u003ch1 id=\"lingmingart-持久化部署作战手册-v20\"\u003elingming.art 持久化部署作战手册 v2.0\u003c/h1\u003e\n\u003ch2 id=\"一核心理念系统工程\"\u003e一、核心理念：系统工程\u003c/h2\u003e\n\u003cp\u003e本手册旨在将个人网站 \u003ccode\u003elingming.art\u003c/code\u003e 的部署与维护视为一项可解构、可规划、可复制的系统工程。我们的目标是构建一个高可用、高内聚、低耦合、易于维护的自动化发布系统。\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"二系统架构\"\u003e二、系统架构\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e域名服务\u003c/strong\u003e: Cloudflare\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e安全隧道\u003c/strong\u003e: Cloudflare Tunnel (\u003ccode\u003ecloudflared\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eWeb 服务器\u003c/strong\u003e: Caddy 2\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e内容生成\u003c/strong\u003e: Hugo (静态网站生成器)\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e版本控制\u003c/strong\u003e: Git\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e运行环境\u003c/strong\u003e: Docker on NAS\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"流程图\"\u003e流程图\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003e开发者电脑 (Hugo/Git)\u003c/code\u003e -\u0026gt; \u003ccode\u003eGit Push\u003c/code\u003e -\u0026gt; \u003ccode\u003eNAS (文件同步)\u003c/code\u003e -\u0026gt; \u003ccode\u003e/volume1/myBlog/public\u003c/code\u003e -\u0026gt; \u003ccode\u003eCaddy (读取)\u003c/code\u003e -\u0026gt; \u003ccode\u003eCloudflare Tunnel (传输)\u003c/code\u003e -\u0026gt; \u003ccode\u003eCloudflare CDN\u003c/code\u003e -\u0026gt; \u003ccode\u003e访客\u003c/code\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"三标准作战流程-sop\"\u003e三、标准作战流程 (SOP)\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e内容创作 (本地)\u003c/strong\u003e: 在个人电脑的博客源文件目录中，使用Markdown创作新文章。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e本地编译与预览\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo server -D\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e在 \u003ccode\u003ehttp://localhost:1313\u003c/code\u003e 预览效果。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e最终编译\u003c/strong\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#75715e\"\u003e# 确保 hugo.toml 中的 baseURL 正确hugo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e此命令会在本地生成全新的 \u003ccode\u003epublic\u003c/code\u003e 文件夹。\u003c/p\u003e","title":"lingming.art 持久化部署作战手册 v2.0"},{"content":"个人网站 (lingming.art) 持久化部署作战手册 一、作战目标 (Objective) 在本地网络（局域网）的NAS设备上，通过Docker容器运行一个网站服务，并利用Cloudflare Tunnel技术，将其安全、稳定地发布到公共互联网，实现通过域名 https://lingming.art 的全球访问。本手册旨在固化部署流程，确保未来可快速、无差错地重建该系统。\n二、核心组件清单 (Bill of Materials) 网站服务容器 (Website Service Container):\n角色: 运行你的网站程序 (如Caddy, Hugo, Nginx等) 的Docker容器。 关键配置: 必须将容器内部的Web端口（如80）映射到NAS的一个固定端口上。 本次战役配置: 容器内部80端口 -\u0026gt; NAS192.168.1.184的40915端口。 Cloudflare Tunnel容器 (cloudflared):\n角色: 部署在NAS上的“内应”，负责创建一条连接到Cloudflare全球网络的安全加密隧道。 关键配置: 包含唯一身份令牌（Token）的Docker指令。 本次战役配置: 使用cloudflare/cloudflared官方镜像。 Cloudflare云端服务:\n角色: 提供DNS解析、隧道管理和安全防护的总指挥部。 关键配置: DNS记录: 一条由隧道自动生成的CNAME记录。 隧道公共主机名: 将公网域名指向NAS上暴露的本地服务地址。 三、作战流程 (Standard Operating Procedure) 步骤1：确保本地服务端口就绪 (Prerequisite: Local Service Port) 在执行任何公网发布操作前，必须确保你的网站服务在局域网内是可访问的。\n检查网站容器的端口映射： 确保你的网站容器启动时，包含了端口映射参数，例如 -p 40915:80。 本地回路验证： 在局域网内的任何设备上，打开浏览器，访问 http://192.168.1.184:40915。必须能够正常看到你的网站页面。此步骤不成功，切勿继续。 步骤2：配置Cloudflare指挥部 (Cloudflare DNS \u0026amp; Tunnel Creation) 登录Cloudflare仪表板，进入 lingming.art 域。 清理DNS战场 (极其重要): 前往左侧菜单 DNS \u0026gt; Records (记录)。 删除任何现存的、名称为 lingming.art 或 www 的 A, AAAA, CNAME 记录。目的是为隧道自动生成的记录扫清障碍，避免冲突。 创建隧道并获取令牌: 前往左侧菜单 Zero Trust。 在Zero Trust仪表板中，进入 Access \u0026gt; Tunnels (访问 \u0026gt; 隧道)。 点击 Create a tunnel (创建隧道)。 选择 Cloudflared 作为连接器，点击 Next。 为隧道命名 (例如 nas-website-tunnel)，点击 Save tunnel。 在 \u0026ldquo;Install and run a connector\u0026rdquo; 页面，选择 Docker。你会看到一条 docker run ... 指令，其中包含了你的唯一身份令牌 (Token)。复制并保存这条完整的指令。 步骤3：部署NAS前线节点 (Deploying the Tunnel on NAS) 通过SSH登录到你的NAS (192.168.1.184)。\n执行以下**【最终版】**Docker指令，它包含了后台运行、自动重启等持久化参数。请将 \u0026lt;你的隧道令牌\u0026gt; 替换为你在上一步中获取的真实令牌。\nsudo docker run -d --restart unless-stopped --name cloudflare-tunnel cloudflare/cloudflared:latest tunnel --no-autoupdate run --token \u0026lt;你的隧道令牌\u0026gt; 本次战役使用的精确指令备份：\nsudo docker run -d --restart unless-stopped --name cloudflare-tunnel cloudflare/cloudflared:latest tunnel --no-autoupdate run --token eyJhIjoiYTlhYjNhM2UxZjBlNzQ2MDBjNDA2MDc1ZmY1YTA2M2MiLCJ0IjoiZDExNmEzMWYtNWY5MC00YmFjLTgxNzctZmI5MDE5ZDZiNGI1IiwicyI6Ik0yWTFNakkyWW1FdE9EUTRNaTAwTnpRM0xUZzFZemt0TWpGaE9XUXpabUV5TmpCaiJ9 验证部署状态:\n执行 sudo docker ps，确认名为 cloudflare-tunnel 的容器处于 Up 状态。 执行 sudo docker logs cloudflare-tunnel，确认日志中出现多条指向Cloudflare不同数据中心（如sjc06, sjc08）的 Registered tunnel connection 信息。 步骤4：配置公共路由 (Configuring the Public Hostname) 当NAS上的隧道容器成功运行后，返回Cloudflare的隧道配置页面。\n在你的隧道列表中，点击 Configure (配置)。 选择 Public Hostname (公共主机名) 标签页。 点击 Add a public hostname (添加公共主机名)。 填写路由信息: Hostname (主机名): lingming.art Service / Type (服务 / 类型): HTTP Service / URL (服务 / URL): 192.168.1.184:40915 点击 Save hostname (保存主机名)。 完成此步骤后，Cloudflare会自动在你的DNS区域为你创建正确的CNAME记录。等待几分钟全球DNS同步后，即可通过 https://lingming.art 访问。\n四、关键代码与配置清单 (Quick Reference) NAS局域网IP: 192.168.1.184 网站容器端口映射: 40915:80 (公网 -\u0026gt; 容器) 隧道指向的本地URL: http://192.168.1.184:40915 Cloudflared持久化部署指令: sudo docker run -d --restart unless-stopped --name cloudflare-tunnel cloudflare/cloudflared:latest tunnel --no-autoupdate run --token \u0026lt;你的隧道令牌\u0026gt; #待整理 ","permalink":"https://lingming.art/002-%E6%8A%80%E8%83%BD%E5%BA%93/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99-lingming/","summary":"\u003ch1 id=\"个人网站-lingmingart-持久化部署作战手册\"\u003e个人网站 (lingming.art) 持久化部署作战手册\u003c/h1\u003e\n\u003chr\u003e\n\u003ch2 id=\"一作战目标-objective\"\u003e一、作战目标 (Objective)\u003c/h2\u003e\n\u003cp\u003e在本地网络（局域网）的NAS设备上，通过Docker容器运行一个网站服务，并利用Cloudflare Tunnel技术，将其安全、稳定地发布到公共互联网，实现通过域名 \u003ccode\u003ehttps://lingming.art\u003c/code\u003e 的全球访问。本手册旨在固化部署流程，确保未来可快速、无差错地重建该系统。\u003c/p\u003e\n\u003ch2 id=\"二核心组件清单-bill-of-materials\"\u003e二、核心组件清单 (Bill of Materials)\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e网站服务容器 (Website Service Container):\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e角色:\u003c/strong\u003e 运行你的网站程序 (如Caddy, Hugo, Nginx等) 的Docker容器。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e关键配置:\u003c/strong\u003e 必须将容器内部的Web端口（如\u003ccode\u003e80\u003c/code\u003e）映射到NAS的一个固定端口上。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e本次战役配置:\u003c/strong\u003e 容器内部\u003ccode\u003e80\u003c/code\u003e端口 -\u0026gt; NAS\u003ccode\u003e192.168.1.184\u003c/code\u003e的\u003ccode\u003e40915\u003c/code\u003e端口。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCloudflare Tunnel容器 (\u003ccode\u003ecloudflared\u003c/code\u003e):\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e角色:\u003c/strong\u003e 部署在NAS上的“内应”，负责创建一条连接到Cloudflare全球网络的安全加密隧道。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e关键配置:\u003c/strong\u003e 包含唯一身份令牌（Token）的Docker指令。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e本次战役配置:\u003c/strong\u003e 使用\u003ccode\u003ecloudflare/cloudflared\u003c/code\u003e官方镜像。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eCloudflare云端服务:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e角色:\u003c/strong\u003e 提供DNS解析、隧道管理和安全防护的总指挥部。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e关键配置:\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eDNS记录:\u003c/strong\u003e 一条由隧道自动生成的\u003ccode\u003eCNAME\u003c/code\u003e记录。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e隧道公共主机名:\u003c/strong\u003e 将公网域名指向NAS上暴露的本地服务地址。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"三作战流程-standard-operating-procedure\"\u003e三、作战流程 (Standard Operating Procedure)\u003c/h2\u003e\n\u003ch3 id=\"步骤1确保本地服务端口就绪-prerequisite-local-service-port\"\u003e步骤1：确保本地服务端口就绪 (Prerequisite: Local Service Port)\u003c/h3\u003e\n\u003cp\u003e在执行任何公网发布操作前，必须确保你的网站服务在局域网内是可访问的。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\u003cstrong\u003e检查网站容器的端口映射：\u003c/strong\u003e 确保你的网站容器启动时，包含了端口映射参数，例如 \u003ccode\u003e-p 40915:80\u003c/code\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e本地回路验证：\u003c/strong\u003e 在局域网内的任何设备上，打开浏览器，访问 \u003ccode\u003ehttp://192.168.1.184:40915\u003c/code\u003e。必须能够正常看到你的网站页面。\u003cstrong\u003e此步骤不成功，切勿继续。\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"步骤2配置cloudflare指挥部-cloudflare-dns--tunnel-creation\"\u003e步骤2：配置Cloudflare指挥部 (Cloudflare DNS \u0026amp; Tunnel Creation)\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e登录Cloudflare仪表板，进入 \u003ccode\u003elingming.art\u003c/code\u003e 域。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e清理DNS战场 (极其重要):\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e前往左侧菜单 \u003cstrong\u003eDNS \u0026gt; Records (记录)\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e删除\u003c/strong\u003e任何现存的、名称为 \u003ccode\u003elingming.art\u003c/code\u003e 或 \u003ccode\u003ewww\u003c/code\u003e 的 \u003ccode\u003eA\u003c/code\u003e, \u003ccode\u003eAAAA\u003c/code\u003e, \u003ccode\u003eCNAME\u003c/code\u003e 记录。目的是为隧道自动生成的记录扫清障碍，避免冲突。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e创建隧道并获取令牌:\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e前往左侧菜单 \u003cstrong\u003eZero Trust\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e在Zero Trust仪表板中，进入 \u003cstrong\u003eAccess \u0026gt; Tunnels (访问 \u0026gt; 隧道)\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e点击 \u003cstrong\u003eCreate a tunnel (创建隧道)\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e选择 \u003ccode\u003eCloudflared\u003c/code\u003e 作为连接器，点击 \u003cstrong\u003eNext\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e为隧道命名 (例如 \u003ccode\u003enas-website-tunnel\u003c/code\u003e)，点击 \u003cstrong\u003eSave tunnel\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e在 \u003cstrong\u003e\u0026ldquo;Install and run a connector\u0026rdquo;\u003c/strong\u003e 页面，选择 \u003cstrong\u003eDocker\u003c/strong\u003e。你会看到一条 \u003ccode\u003edocker run ...\u003c/code\u003e 指令，其中包含了你的\u003cstrong\u003e唯一身份令牌 (Token)\u003c/strong\u003e。复制并保存这条完整的指令。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"步骤3部署nas前线节点-deploying-the-tunnel-on-nas\"\u003e步骤3：部署NAS前线节点 (Deploying the Tunnel on NAS)\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e通过SSH登录到你的NAS (\u003ccode\u003e192.168.1.184\u003c/code\u003e)。\u003c/p\u003e","title":"个人网站 (lingming.art) 持久化部署作战手册"},{"content":"至少我一直为此努力 我会在墙外插上一束玫瑰 旅人可以凭借它 敲开我的门 也可以把它带走 我会放一束新的 直到遇到那位真心的客人 如果因为害怕被摘走 就让玫瑰在墙内独自枯萎 花儿也不愿意这样吧。\n","permalink":"https://lingming.art/%E7%A5%9E%E6%AE%BF/%E8%8A%B1%E5%9B%AD/%E7%8E%AB%E7%91%B0/","summary":"\u003cp\u003e至少我一直为此努力\n我会在墙外插上一束玫瑰\n旅人可以凭借它\n敲开我的门\n也可以把它带走\n我会放一束新的\n直到遇到那位真心的客人\n如果因为害怕被摘走\n就让玫瑰在墙内独自枯萎\n花儿也不愿意这样吧。\u003c/p\u003e","title":"玫瑰"},{"content":" 什么是共轭碱？\n一个酸，扔掉H⁺之后，剩下的那个部分，就叫它的“共轭碱”。 例如：CH₃COOH (酸) ⇌ H⁺ + CH₃COO⁻ (共轭碱) 它们之间有什么关系？\n一个非常重要的规律：酸越弱，它的共轭碱就越强；酸越强，它的共轭碱就越弱。 “强”和“弱”指什么？指它抢H⁺的能力。 CH₃COOH是弱酸，说明它不太愿意扔H⁺。反过来说，它的共轭碱 CH₃COO⁻ 就非常想把H⁺抢回来。 ","permalink":"https://lingming.art/002-%E6%8A%80%E8%83%BD%E5%BA%93/%E9%AB%98%E8%80%83%E7%9F%A5%E8%AF%86/%E5%8C%96%E5%AD%A6/%E6%97%A0%E6%9C%BA%E9%83%A8%E5%88%86/%E5%85%B1%E8%BD%AD%E7%A2%B1/","summary":"\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e什么是共轭碱？\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个酸，扔掉H⁺之后，剩下的那个部分，就叫它的“\u003cstrong\u003e共轭碱\u003c/strong\u003e”。\u003c/li\u003e\n\u003cli\u003e例如：\u003ccode\u003eCH₃COOH (酸) ⇌ H⁺ + CH₃COO⁻ (共轭碱)\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e它们之间有什么关系？\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e一个非常重要的规律：\u003cstrong\u003e酸越弱，它的共轭碱就越强；酸越强，它的共轭碱就越弱。\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e“强”和“弱”指什么？指它\u003cstrong\u003e抢H⁺的能力\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eCH₃COOH\u003c/code\u003e是弱酸，说明它不太愿意扔H⁺。反过来说，它的共轭碱 \u003ccode\u003eCH₃COO⁻\u003c/code\u003e 就\u003cstrong\u003e非常想把H⁺抢回来\u003c/strong\u003e。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e","title":"共轭碱"},{"content":"化学键与分子结构 1. 化学键类型对比 键型 成键本质 存在物质 特点 离子键 阴阳离子静电作用 NaCl, CaO 高熔点、水溶液导电 共价键 共用电子对 H₂O, CH₄ 方向性、饱和性 金属键 自由电子+阳离子 Fe, Cu 延展性、导电导热 2. 键参数与分子性质 参数 定义 影响性质 键能 断裂1mol键所需能量 分子稳定性（键能↑越稳） 键长 成键原子核间距 键长↑ → 键能↓ 极性 电负性差（Δχ） Δχ\u0026gt;1.7：离子键；Δχ\u0026lt;1.7：共价键 极性判断：\n非极性键：同种原子（H₂, O₂） 极性键：不同原子（HCl, H₂O） 3. 电子效应与溶解性 效应类型 作用 实例 推电子 增加电子云密度（烷基） -CH₃使羧酸酸性减弱 吸电子 降低电子云密度（卤素） -Cl使羧酸酸性增强 相似相溶 极性分子溶于极性溶剂 乙醇（极性）易溶于水 结构简式 vs 结构式：\n结构简式：省略C-H键（如CH₃CH₂OH） 结构式：展示所有原子和键（如H-C-C-O-H） ","permalink":"https://lingming.art/002-%E6%8A%80%E8%83%BD%E5%BA%93/%E9%AB%98%E8%80%83%E7%9F%A5%E8%AF%86/%E5%8C%96%E5%AD%A6/%E5%88%86%E5%AD%90%E7%BB%93%E6%9E%84/%E5%8C%96%E5%AD%A6%E9%94%AE%E4%B8%8E%E5%88%86%E5%AD%90%E7%BB%93%E6%9E%84/","summary":"\u003ch3 id=\"化学键与分子结构\"\u003e\u003cstrong\u003e化学键与分子结构\u003c/strong\u003e\u003c/h3\u003e\n\u003ch4 id=\"1-化学键类型对比\"\u003e1. 化学键类型对比\u003c/h4\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e键型\u003c/th\u003e\n          \u003cth\u003e成键本质\u003c/th\u003e\n          \u003cth\u003e存在物质\u003c/th\u003e\n          \u003cth\u003e特点\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e离子键\u003c/td\u003e\n          \u003ctd\u003e阴阳离子静电作用\u003c/td\u003e\n          \u003ctd\u003eNaCl, CaO\u003c/td\u003e\n          \u003ctd\u003e高熔点、水溶液导电\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e共价键\u003c/td\u003e\n          \u003ctd\u003e共用电子对\u003c/td\u003e\n          \u003ctd\u003eH₂O, CH₄\u003c/td\u003e\n          \u003ctd\u003e方向性、饱和性\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e金属键\u003c/td\u003e\n          \u003ctd\u003e自由电子+阳离子\u003c/td\u003e\n          \u003ctd\u003eFe, Cu\u003c/td\u003e\n          \u003ctd\u003e延展性、导电导热\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003chr\u003e\n\u003ch4 id=\"2-键参数与分子性质\"\u003e2. 键参数与分子性质\u003c/h4\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e参数\u003c/th\u003e\n          \u003cth\u003e定义\u003c/th\u003e\n          \u003cth\u003e影响性质\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e键能\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e断裂1mol键所需能量\u003c/td\u003e\n          \u003ctd\u003e分子稳定性（键能↑越稳）\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e键长\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e成键原子核间距\u003c/td\u003e\n          \u003ctd\u003e键长↑ → 键能↓\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e极性\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e电负性差（Δχ）\u003c/td\u003e\n          \u003ctd\u003eΔχ\u0026gt;1.7：离子键；Δχ\u0026lt;1.7：共价键\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cstrong\u003e极性判断\u003c/strong\u003e：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e非极性键：同种原子（H₂, O₂）\u003c/li\u003e\n\u003cli\u003e极性键：不同原子（HCl, H₂O）\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch4 id=\"3-电子效应与溶解性\"\u003e3. 电子效应与溶解性\u003c/h4\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e效应类型\u003c/th\u003e\n          \u003cth\u003e作用\u003c/th\u003e\n          \u003cth\u003e实例\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e推电子\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e增加电子云密度（烷基）\u003c/td\u003e\n          \u003ctd\u003e-CH₃使羧酸酸性减弱\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e吸电子\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e降低电子云密度（卤素）\u003c/td\u003e\n          \u003ctd\u003e-Cl使羧酸酸性增强\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003e相似相溶\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003e极性分子溶于极性溶剂\u003c/td\u003e\n          \u003ctd\u003e乙醇（极性）易溶于水\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e结构简式 vs 结构式\u003c/strong\u003e：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e结构简式：省略C-H键（如CH₃CH₂OH）\u003c/li\u003e\n\u003cli\u003e结构式：展示所有原子和键（如H-C-C-O-H）\u003c/li\u003e\n\u003c/ul\u003e\u003c/blockquote\u003e","title":"化学键与分子结构"},{"content":"道德（Ethics） 核心定义：\n道德的本质是寻求共赢（Positive-Sum/Win-Win）。它是在“延续生命奇迹”这一终极价值（见公理一）的指引下，为了实现“体验至上”（见公理二）这一动机，而形成的一种最大化生命系统整体利益的智慧与实践。\n基本原则：\n共赢是唯一标准：一个行为是否道德，不取决于它的名义、传统或群体共识，而只取决于它是否以“共赢”为最终目的。任何导向“我赢你输”（零和博弈）或“双输”（负和博弈）的行为，无论被如何包装，本质上都是不道德的，它们是“伪道德”或“被劫持的道德”。\n契约基于价值共生：道德契约不仅存在于能明确交流的人类之间，更广泛地存在于一切能与我们形成“价值共生”的对象之中。\n对他人：基于“互惠利他”的社会博弈，以信任和合作为基础，避免陷入“囚徒困境”。 对动物：基于情感价值、使用价值和生态价值的交换。虐待动物会增加整个生命系统的“熵”（混乱与痛苦），因此是不道德的。 对环境：基于生存依赖。破坏我们赖以为生的环境，是在损害我们自身和后代的长远利益，违背共赢原则。 对后代：基于“维护生命奇迹”的根本责任。我们是生命偶然性的受益者，有责任将这份奇迹延续下去。 差等之爱（同心圆原则）：在实践中，道德责任以自我为中心，向外辐射，形成一个优先级递减的同心圆。在资源和精力有限的情况下，以人类的整体利益为最高优先级是现实且合理的。但这并不意味着可以无视外圈（如动物、环境）的利益，而是在不严重损害内圈核心利益的前提下，尽可能寻求与外圈的共赢。\n方法论与冲突解决：\n识别伪道德：当一个群体以“忠诚”、“奉献”等道德词汇为名，行侵略、排外之实时，其内核是“我赢你输”。必须穿透其光鲜外衣，识别其不道德的本质。这同样适用于群体内部，当一个群体的共识导致对个体的压迫时，它同样是伪道德。\n从“道德判断”转向“博弈均衡”：当冲突双方的目标都符合“共赢”原则时（例如：经济发展 vs. 环境保护），这便不再是道德上的对错之争，而是一个寻求均衡点的博弈问题。\n承认合理性：承认冲突双方的动机都具备道德正当性。 系统性思考：将看似对立的目标视为一个共生系统内的不同方面。 寻找创造性方案：引入科技、管理、时间等变量，寻找超越二元对立的“第三条路”（如：通过技术创新实现清洁发展，通过生态补偿机制平衡开发与保护）。 妥协与合作：在无法完美时，本着“共赢”的最终目标进行合作与妥协，达成一个对系统整体最有利的动态均衡。 结论： 在LingMing的小世界里，道德不是一套僵化的规则，而是一种动态的、理性的、以“共赢”为指针的生存智慧。它根植于对生命偶然性的敬畏，服务于创造美好体验的终极追求。\n","permalink":"https://lingming.art/%E7%A5%9E%E6%AE%BF/what/%E9%81%93%E5%BE%B7/","summary":"\u003ch1 id=\"道德ethics\"\u003e\u003cstrong\u003e道德（Ethics）\u003c/strong\u003e\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003e核心定义：\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e道德的本质是\u003cstrong\u003e寻求共赢（Positive-Sum/Win-Win）\u003c/strong\u003e。它是在“延续生命奇迹”这一终极价值（见公理一）的指引下，为了实现“体验至上”（见公理二）这一动机，而形成的一种\u003cstrong\u003e最大化生命系统整体利益\u003c/strong\u003e的智慧与实践。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e基本原则：\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e共赢是唯一标准\u003c/strong\u003e：一个行为是否道德，不取决于它的名义、传统或群体共识，而只取决于它是否以“共赢”为最终目的。任何导向“我赢你输”（零和博弈）或“双输”（负和博弈）的行为，无论被如何包装，本质上都是不道德的，它们是“伪道德”或“被劫持的道德”。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e契约基于价值共生\u003c/strong\u003e：道德契约不仅存在于能明确交流的人类之间，更广泛地存在于一切能与我们形成“价值共生”的对象之中。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e对他人\u003c/strong\u003e：基于“互惠利他”的社会博弈，以信任和合作为基础，避免陷入“囚徒困境”。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e对动物\u003c/strong\u003e：基于情感价值、使用价值和生态价值的交换。虐待动物会增加整个生命系统的“熵”（混乱与痛苦），因此是不道德的。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e对环境\u003c/strong\u003e：基于生存依赖。破坏我们赖以为生的环境，是在损害我们自身和后代的长远利益，违背共赢原则。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e对后代\u003c/strong\u003e：基于“维护生命奇迹”的根本责任。我们是生命偶然性的受益者，有责任将这份奇迹延续下去。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e差等之爱（同心圆原则）\u003c/strong\u003e：在实践中，道德责任以自我为中心，向外辐射，形成一个优先级递减的同心圆。在资源和精力有限的情况下，以人类的整体利益为最高优先级是现实且合理的。但这并不意味着可以无视外圈（如动物、环境）的利益，而是在不严重损害内圈核心利益的前提下，尽可能寻求与外圈的共赢。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e方法论与冲突解决：\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e识别伪道德\u003c/strong\u003e：当一个群体以“忠诚”、“奉献”等道德词汇为名，行侵略、排外之实时，其内核是“我赢你输”。必须穿透其光鲜外衣，识别其不道德的本质。这同样适用于群体内部，当一个群体的共识导致对个体的压迫时，它同样是伪道德。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003e从“道德判断”转向“博弈均衡”\u003c/strong\u003e：当冲突双方的目标\u003cstrong\u003e都符合“共赢”原则\u003c/strong\u003e时（例如：经济发展 vs. 环境保护），这便不再是道德上的对错之争，而是一个\u003cstrong\u003e寻求均衡点的博弈问题\u003c/strong\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e承认合理性\u003c/strong\u003e：承认冲突双方的动机都具备道德正当性。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e系统性思考\u003c/strong\u003e：将看似对立的目标视为一个共生系统内的不同方面。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e寻找创造性方案\u003c/strong\u003e：引入科技、管理、时间等变量，寻找超越二元对立的“第三条路”（如：通过技术创新实现清洁发展，通过生态补偿机制平衡开发与保护）。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e妥协与合作\u003c/strong\u003e：在无法完美时，本着“共赢”的最终目标进行合作与妥协，达成一个对系统整体最有利的动态均衡。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e结论：\u003c/strong\u003e 在LingMing的小世界里，道德不是一套僵化的规则，而是一种动态的、理性的、以“共赢”为指针的生存智慧。它根植于对生命偶然性的敬畏，服务于创造美好体验的终极追求。\u003c/p\u003e","title":"道德"},{"content":"你好？\n","permalink":"https://lingming.art/test/","summary":"\u003cp\u003e你好？\u003c/p\u003e","title":"test"},{"content":"这是您将本地的“军火库”（Obsidian笔记经过v11.0脚本处理后的Hugo项目）运送到GitHub这个“前沿基地”的标准流程。这套流程，您只需要在终端（比如VS Code的终端）中，进入您的Hugo项目根目录，然后执行**“战略三步”**：\n第一步：打包所有变更 (git add)\nbash\ngit add .\n指令解析： git add . 命令会扫描您本地项目文件夹里的所有变化（新增的文件、修改过的文件、删除的文件），并将它们全部标记为“待打包”。 战术比喻： 这就像您把所有要送往前线的物资（新的文章、修改的配置）都清点一遍，然后统一放进一个巨大的运输箱里。 第二步：贴上封条和摘要 (git commit)\nbash\ngit commit -m \u0026quot;一个清晰的更新摘要，比如：新增3篇笔记并更新主题\u0026quot;\n指令解析： git commit 会将您刚刚打包的所有变更，正式“封箱”，并生成一个永久性的版本记录。-m 后面的文字，就是您为这个箱子贴上的“内容摘要”，至关重要。 战术比喻： 您为运输箱贴上封条，并在标签上写明：“2025年8月6日批次，内含《系统构建学》和《屠龙纲要》两份最新战报”。这能让您在未来快速回顾每一次的变更内容。 第三步：发射到轨道 (git push)\nbash\ngit push origin main\n指令解析： git push 会将您本地“封箱”好的最新版本，正式推送（上传）到GitHub上名为origin的远程仓库的main分支中。 战术比喻： 按下发射按钮，将这箱物资精准地送入GitHub这个轨道空间站。Vercel会立刻侦测到空间站收到了新物资，并自动开始下一步的部署。 总结：未来您的每一次更新，都只需要重复这“三步曲”：add -\u0026gt; commit -\u0026gt; push。\n","permalink":"https://lingming.art/001-%E9%A1%B9%E7%9B%AE/web/%E5%A6%82%E4%BD%95%E7%94%A8git%E5%91%BD%E4%BB%A4%E5%90%8C%E6%AD%A5%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%88%B0github%E4%BB%93%E5%BA%93/","summary":"\u003cp\u003e这是您将本地的“军火库”（Obsidian笔记经过\u003ccode\u003ev11.0\u003c/code\u003e脚本处理后的Hugo项目）运送到GitHub这个“前沿基地”的标准流程。这套流程，您只需要在终端（比如VS Code的终端）中，进入您的Hugo项目根目录，然后执行**“战略三步”**：\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e第一步：打包所有变更 (git add)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ebash\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit add .\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e指令解析：\u003c/strong\u003e \u003ccode\u003egit add .\u003c/code\u003e 命令会扫描您本地项目文件夹里的所有变化（新增的文件、修改过的文件、删除的文件），并将它们全部标记为“待打包”。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e战术比喻：\u003c/strong\u003e 这就像您把所有要送往前线的物资（新的文章、修改的配置）都清点一遍，然后统一放进一个巨大的运输箱里。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e第二步：贴上封条和摘要 (git commit)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ebash\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit commit -m \u0026quot;一个清晰的更新摘要，比如：新增3篇笔记并更新主题\u0026quot;\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e指令解析：\u003c/strong\u003e \u003ccode\u003egit commit\u003c/code\u003e 会将您刚刚打包的所有变更，正式“封箱”，并生成一个永久性的版本记录。\u003ccode\u003e-m\u003c/code\u003e 后面的文字，就是您为这个箱子贴上的“内容摘要”，至关重要。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e战术比喻：\u003c/strong\u003e 您为运输箱贴上封条，并在标签上写明：“2025年8月6日批次，内含《系统构建学》和《屠龙纲要》两份最新战报”。这能让您在未来快速回顾每一次的变更内容。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e第三步：发射到轨道 (git push)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ebash\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003egit push origin main\u003c/code\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003e指令解析：\u003c/strong\u003e \u003ccode\u003egit push\u003c/code\u003e 会将您本地“封箱”好的最新版本，正式推送（上传）到GitHub上名为\u003ccode\u003eorigin\u003c/code\u003e的远程仓库的\u003ccode\u003emain\u003c/code\u003e分支中。\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003e战术比喻：\u003c/strong\u003e 按下发射按钮，将这箱物资精准地送入GitHub这个轨道空间站。Vercel会立刻侦测到空间站收到了新物资，并自动开始下一步的部署。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003e总结：未来您的每一次更新，都只需要重复这“三步曲”：\u003ccode\u003eadd\u003c/code\u003e -\u0026gt; \u003ccode\u003ecommit\u003c/code\u003e -\u0026gt; \u003ccode\u003epush\u003c/code\u003e。\u003c/strong\u003e\u003c/p\u003e","title":"如何同步本地文件到GitHub仓库"},{"content":"Dao, the way, or should I say the principal of the universe\u0026rsquo;s operation, has been being summarizing by us since 770 BC. De, which is collocated with Dao, was found as moral rule in order to stabilize the society.\n这句话的翻译如下：\n道 (Dào)，即宇宙运行的根本法则，自公元前770年起，我们便一直在对其进行总结归纳。\n德 (Dé)，常与道并称，被视为稳定社会的道德准则。\n翻译要点说明：\nDao (道)：\n\u0026ldquo;the way, or should I say the principal of the universe\u0026rsquo;s operation\u0026rdquo; → “宇宙运行的根本法则”。这里将 “the way” 意译为更符合中文哲学语境的核心概念“道”，并用同位语解释“宇宙运行的根本法则”明确其内涵。 \u0026ldquo;has been being summarizing by us since 770 BC\u0026rdquo; → “自公元前770年起，我们便一直在对其进行总结归纳”。调整了被动语态为主动语态（我们总结归纳），并用“便一直在”强调时间上的延续性。“总结归纳”比直译“总结”更准确体现持续提炼的过程。 De (德)：\n\u0026ldquo;which is collocated with Dao\u0026rdquo; → “常与道并称”。用“并称”体现两者在概念上的紧密关联。 \u0026ldquo;was found as moral rule in order to stabilize the society\u0026rdquo; → “被视为稳定社会的道德准则”。将被动语态“was found as”译为“被视为”，更符合中文表达习惯。“moral rule”译为“道德准则”清晰点明其社会规范属性，“稳定社会”准确对应“stabilize the society”的目的。 整体效果：\n术语准确：核心概念“道”和“德”直接使用中文哲学标准译法。 句式流畅：将英文的长句结构拆解重组，符合中文表达习惯。 逻辑清晰：明确表达了“道”作为宇宙根本法则的哲学属性，以及“德”作为其社会伦理应用的属性。 文化适配：用语符合中国哲学语境（如“并称”、“视为”、“准则”）。 时间明确：“自公元前770年起”清晰点明时间背景。 ","permalink":"https://lingming.art/%E5%A2%99%E5%A4%96/%E6%97%85%E4%BA%BA%E7%9A%84%E7%97%95%E8%BF%B9/%E4%BB%A3%E6%98%86%E4%BB%91%E5%88%B0%E6%AD%A4%E4%B8%80%E6%B8%B8/","summary":"\u003cp\u003eDao, the way, or should I say the principal of the universe\u0026rsquo;s operation, has been being summarizing by us since 770 BC.\nDe, which is collocated with Dao, was found as moral rule in order to stabilize the society.\u003c/p\u003e\n\u003cp\u003e这句话的翻译如下：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003e道 (Dào)\u003c/strong\u003e，即宇宙运行的根本法则，自公元前770年起，我们便一直在对其进行总结归纳。\u003cbr\u003e\n\u003cstrong\u003e德 (Dé)\u003c/strong\u003e，常与道并称，被视为稳定社会的道德准则。\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003cstrong\u003e翻译要点说明：\u003c/strong\u003e\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDao (道)\u003c/strong\u003e：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u0026ldquo;the way, or should I say the principal of the universe\u0026rsquo;s operation\u0026rdquo; → \u003cstrong\u003e“宇宙运行的根本法则”\u003c/strong\u003e。这里将 “the way” 意译为更符合中文哲学语境的核心概念“道”，并用同位语解释“宇宙运行的根本法则”明确其内涵。\u003c/li\u003e\n\u003cli\u003e\u0026ldquo;has been being summarizing by us since 770 BC\u0026rdquo; → \u003cstrong\u003e“自公元前770年起，我们便一直在对其进行总结归纳”\u003c/strong\u003e。调整了被动语态为主动语态（我们总结归纳），并用“便一直在”强调时间上的延续性。“总结归纳”比直译“总结”更准确体现持续提炼的过程。\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDe (德)\u003c/strong\u003e：\u003c/p\u003e","title":"代昆仑到此一游"},{"content":"[[玫瑰]]\n","permalink":"https://lingming.art/%E5%A2%99%E5%A4%96/%E5%A2%99%E4%B8%8A/","summary":"\u003cp\u003e[[玫瑰]]\u003c/p\u003e","title":"墙上"}]